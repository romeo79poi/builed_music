# CATCH Music Streaming - Kafka Server Configuration
# Optimized for high-throughput music streaming workloads

############################# Server Basics #############################

# The id of the broker. This must be set to a unique integer for each broker.
broker.id=1

# Enable automatic broker id generation
broker.id.generation.enable=true

############################# Socket Server Settings #############################

# The address the socket server listens on. It will get the value returned from 
# java.net.InetAddress.getCanonicalHostName() if not configured.
listeners=PLAINTEXT://:9092,SSL://:9093

# Hostname and port the broker will advertise to producers and consumers.
advertised.listeners=PLAINTEXT://localhost:9092,SSL://localhost:9093

# Maps listener names to security protocols
listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL

# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=8

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=16

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600

############################# Log Basics #############################

# A comma separated list of directories under which to store log files
log.dirs=/var/kafka-logs

# The default number of log partitions per topic
num.partitions=6

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown
num.recovery.threads.per.data.dir=2

############################# Internal Topic Settings #############################

# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
offsets.topic.replication.factor=3
transaction.state.log.replication.factor=3
transaction.state.log.min.isr=2

############################# Log Flush Policy #############################

# The number of messages to accept before forcing a flush of data to disk
log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
log.flush.interval.ms=1000

############################# Log Retention Policy #############################

# The minimum age of a log file to be eligible for deletion due to age
log.retention.hours=168

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according to the retention policies
log.retention.check.interval.ms=300000

# Enable log compression
compression.type=lz4

############################# Performance Tuning #############################

# Increase batch size for better throughput
batch.size=65536

# Buffer memory for producer
buffer.memory=134217728

# Increase linger time for better batching
linger.ms=5

# Enable compression for better network utilization
compression.type=lz4

# Optimize for throughput over latency
acks=1

# Increase fetch size for consumers
fetch.min.bytes=50000
fetch.max.wait.ms=500

# Optimize replica fetching
replica.fetch.min.bytes=1024
replica.fetch.wait.max.ms=500

# Increase segment index interval for better performance
log.index.interval.bytes=4096

# Background thread settings for better performance
background.threads=10

# Message size limits for high-throughput scenarios
message.max.bytes=10485760
replica.fetch.max.bytes=10485760

############################# Zookeeper #############################

# Zookeeper connection string
zookeeper.connect=localhost:2181

# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=18000

# Session timeout for zookeeper
zookeeper.session.timeout.ms=18000

############################# Group Coordinator Settings #############################

# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance
group.initial.rebalance.delay.ms=3000

# Enable automatic leader rebalancing
auto.leader.rebalance.enable=true

# Leader imbalance check interval
leader.imbalance.check.interval.seconds=300

# Allowed leader imbalance ratio
leader.imbalance.per.broker.percentage=10

############################# Security Settings #############################

# SSL configuration for secure communication
ssl.keystore.location=/etc/kafka/ssl/kafka.server.keystore.jks
ssl.keystore.password=kafka-server-password
ssl.key.password=kafka-server-password
ssl.truststore.location=/etc/kafka/ssl/kafka.server.truststore.jks
ssl.truststore.password=kafka-server-password

# Security protocol for inter-broker communication
security.inter.broker.protocol=SSL

# SSL client authentication
ssl.client.auth=required

# Enable SSL for secure connections
ssl.enabled.protocols=TLSv1.2,TLSv1.3

############################# JMX Monitoring #############################

# Enable JMX for monitoring
jmx.port=9999

############################# Additional Performance Settings #############################

# Increase the number of replica fetcher threads
num.replica.fetchers=4

# Increase the socket buffer sizes for replica fetching
replica.socket.receive.buffer.bytes=131072

# Enable unclean leader election prevention
unclean.leader.election.enable=false

# Minimum in-sync replicas
min.insync.replicas=2

# Default replication factor
default.replication.factor=3

# Enable request logging for debugging (disable in production)
kafka.request.logger=kafka.request.logger

# Producer ID expiration
producer.id.expiration.ms=86400000

# Transaction timeout
transaction.max.timeout.ms=900000
transaction.timeout.ms=60000

############################# Quota Settings #############################

# Producer quota (bytes/sec per client)
quota.producer.default=104857600

# Consumer quota (bytes/sec per client)
quota.consumer.default=104857600

# Request quota (requests/sec per client)
quota.request.default=2000

############################# Cleanup and Compaction #############################

# Log cleanup policy for different workloads
log.cleanup.policy=delete

# Compaction settings for state topics
log.cleaner.enable=true
log.cleaner.threads=2
log.cleaner.io.max.bytes.per.second=5242880

# Compaction lag settings
log.cleaner.min.cleanable.ratio=0.1
log.cleaner.delete.retention.ms=86400000

############################# Metrics and Monitoring #############################

# Enable Kafka metrics
metric.reporters=

# Metrics retention
metrics.num.samples=2
metrics.sample.window.ms=30000

# JVM settings optimizations (add to kafka-server-start.sh)
# export KAFKA_HEAP_OPTS="-Xmx6g -Xms6g"
# export KAFKA_JVM_PERFORMANCE_OPTS="-server -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent -XX:MaxInlineLevel=15 -Djava.awt.headless=true"

############################# Custom Settings for Music Streaming #############################

# Optimize for music streaming workloads
# These settings are tuned for high-throughput, low-latency scenarios

# Increase partition leadership rebalancing for better distribution
partition.balance.window.ms=10000

# Optimize segment rolling for streaming workloads
log.roll.hours=24
log.roll.jitter.hours=4

# Set appropriate timeouts for streaming scenarios
request.timeout.ms=30000
session.timeout.ms=30000

# Enable idempotent producers for exactly-once semantics
enable.idempotence=true

# Increase the number of network and I/O threads for high concurrency
num.network.threads=12
num.io.threads=24

# Optimize for SSD storage
log.flush.scheduler.interval.ms=2000
log.flush.offset.checkpoint.interval.ms=60000

# Memory mapping settings
log.segment.delete.delay.ms=60000

# Connection limits
max.connections.per.ip=2000
max.connections=5000

# Authentication and authorization (configure as needed)
# authorizer.class.name=kafka.security.auth.SimpleAclAuthorizer
# super.users=User:kafka-admin

############################# Topic-specific overrides #############################

# These can be set per topic using kafka-configs.sh
# Examples:
# retention.ms=604800000 (7 days for streaming events)
# retention.ms=2592000000 (30 days for user plays)
# retention.ms=31557600000 (1 year for account events)
# cleanup.policy=compact (for state topics)
# min.insync.replicas=2 (for critical topics)
# compression.type=lz4 (for all topics)
